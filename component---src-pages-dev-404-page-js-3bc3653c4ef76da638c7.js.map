{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/pages/dev-404-page.js","webpack:///./src/components/seo.js"],"names":["Layout","header","location","title","children","isRootPath","pathname","className","to","data-is-root-path","Date","getFullYear","href","NotFoundPage","data","siteTitle","site","siteMetadata","pageQuery","SEO","description","lang","meta","useStaticQuery","metaDescription","defaultTitle","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","defaultProps"],"mappings":"2FAAA,qCAmCeA,IAhCA,SAAC,GAAmC,IAG7CC,EAHYC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAE3BC,EADQ,MACKH,EAASI,SAiB5B,OAbEL,EADEI,EAEA,wBAAIE,UAAU,gBACZ,kBAAC,OAAD,CAAMC,GAAG,KAAKL,IAKhB,kBAAC,OAAD,CAAMI,UAAU,mBAAmBC,GAAG,KACnCL,GAML,yBAAKI,UAAU,iBAAiBE,oBAAmBJ,GACjD,4BAAQE,UAAU,iBAAiBN,GACnC,8BAAOG,GACP,sCACK,IAAIM,MAAOC,cADhB,mBAGE,uBAAGC,KAAK,4BAAR,c,kCC7BR,kGAkBeC,UAZM,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMZ,EAAe,EAAfA,SACtBa,EAAYD,EAAKE,KAAKC,aAAad,MAEzC,OACE,kBAAC,IAAD,CAAQD,SAAUA,EAAUC,MAAOY,GACjC,kBAAC,IAAD,CAAKZ,MAAM,mBACX,8CACA,8BAOC,IAAMe,EAAS,c,kCCpBtB,iDAYMC,EAAM,SAAC,GAAwC,IAAD,MAArCC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,KAAMnB,EAAY,EAAZA,MAC9Ba,EAASO,yBAAe,cAAxBP,KAgBFQ,EAAkBJ,GAAeJ,EAAKC,aAAaG,YACnDK,EAAY,UAAGT,EAAKC,oBAAR,aAAG,EAAmBd,MAExC,OACE,kBAAC,SAAD,CACEuB,eAAgB,CACdL,QAEFlB,MAAOA,EACPwB,cAAeF,EAAY,QAAWA,EAAiB,KACvDH,KAAM,CACJ,CACEM,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAAS1B,GAEX,CACE2B,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,SAAS,UAAAb,EAAKC,oBAAL,mBAAmBc,cAAnB,eAA2BC,UAA3B,IAEX,CACEJ,KAAK,gBACLC,QAAS1B,GAEX,CACEyB,KAAK,sBACLC,QAASL,IAEXS,OAAOX,MAKfH,EAAIe,aAAe,CACjBb,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD","file":"component---src-pages-dev-404-page-js-3bc3653c4ef76da638c7.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"404: Not Found\" />\n      <h1>404: Not Found</h1>\n      <p></p>\n    </Layout>\n  )\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst SEO = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.social?.twitter || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}